[tool.poetry]
name = "containmentcheck"
version = "0.1.0"
description = ""
authors = ["Gregory M. Kapfhammer <gkapfham@allegheny.edu>"]

[tool.poetry.scripts]
containmentcheck = "containmentcheck.main:cli"

[tool.poetry.dependencies]
python = "^3.8"
rich = "^10.9.0"
typer = "^0.7.0"
ruff = "^0.3.4"
mypy = "^1.9.0"

[tool.poetry.dev-dependencies]
taskipy = "^1.8.1"

[tool.poetry.group.dev.dependencies]
pymarkdownlnt = "^0.9.11"

[tool.taskipy.tasks]
ruff = { cmd = "ruff check --preview --output-format=concise", help = "Run the ruff checks for source code format and linting" }
fix = { cmd = "ruff --fix", help = "Fix the fixable ruff errors in source code format" }
ruffdetails = { cmd = "ruff check --preview", help = "Run the ruff checks for source code format and linting" }
markdownlint = { cmd = "poetry run pymarkdown --config .pymarkdown.cfg scan ../writing/reflection.md ../README.md", help = "Run the markdown linter on writing" }
mypy = { cmd = "poetry run mypy containmentcheck", help = "Run the mypy type checker for potential type errors" }
all = "task ruff && task markdownlint && task mypy && task test"
black = { cmd = "echo Ruff has replaced black, isort, flake8, pylint, pydocstyle. See pyproject.toml" }
isort = { cmd = "echo Ruff has replaced black, isort, flake8, pylint, pydocstyle. See pyproject.toml" }
flake8 = { cmd = "echo Ruff has replaced black, isort, flake8, pylint, pydocstyle. See pyproject.toml" }
pylint = { cmd = "echo Ruff has replaced black, isort, flake8, pylint, pydocstyle. See pyproject.toml" }
fiximports = { cmd = "echo Ruff has replaced black, isort, flake8, pylint, pydocstyle. See pyproject.toml" }
fixformat = { cmd = "echo Ruff has replaced black, isort, flake8, pylint, pydocstyle. See pyproject.toml" }


[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
